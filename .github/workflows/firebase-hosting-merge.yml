name: Deploy to Firebase Hosting on merge

on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install deps
        run: pnpm install --no-frozen-lockfile

      - name: Generate .env for Vite
        run: |
          cat > .env <<'EOF'
          PUBLIC_FIREBASE_API_KEY=${{ secrets.VITE_FIREBASE_API_KEY }}
          PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          PUBLIC_FIREBASE_APP_ID=${{ secrets.VITE_FIREBASE_APP_ID }}
          PUBLIC_FIREBASE_MEASUREMENT_ID=${{ secrets.VITE_FIREBASE_MEASUREMENT_ID }}
          EOF

      - name: Sanity check .env (redacted)
        run: |
          echo "----- PUBLIC FIELDS -----"
          grep -E 'PUBLIC_FIREBASE_(PROJECT_ID|AUTH_DOMAIN|STORAGE_BUCKET)=' .env || true
          echo "----- LENGTH CHECKS -----"
          awk -F= '/^PUBLIC_FIREBASE_API_KEY=/{printf("API_KEY length=%d\n", length($2))}' .env || true
          awk -F= '/^PUBLIC_FIREBASE_APP_ID=/{printf("APP_ID length=%d\n", length($2))}' .env || true
          awk -F= '/^PUBLIC_FIREBASE_MESSAGING_SENDER_ID=/{printf("MSG_SENDER_ID length=%d\n", length($2))}' .env || true

      # Build with Vite (same as local)
      - name: Build
        run: pnpm run build

      - name: Verify build output
        run: ls -la build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_PUZZLEGAME_81846 }}
          projectId: puzzlegame-81846
          channelId: live
